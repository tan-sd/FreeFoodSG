{"ast":null,"code":"const get_all_food_URL = \"http://localhost:1112/all\";\nexport default {\n  props: [],\n  data() {\n    return {\n      food: [],\n      buffets: [{\n        description: 'Food at SOL',\n        location: '1 Joo Koon Cir, #13-01 FairPrice Hub, Singapore 629117',\n        lat: 1.3267935951952476,\n        long: 103.67878198117971,\n        distance: null,\n        end_time: '2023-03-12T11:15:00',\n        // yyyy-mm-ddThh:mm:ss <- T is only a seperator\n        diet_res: ['halal', 'vegetarian', 'nobeef'],\n        time_left: ''\n      }, {\n        description: 'Food at Esplanade. Really delicious, got chicken wings, burger, nuggets, bull penis, ice cream and chocolate cake! Come fast cos confirm very fast clear one~ :)Food at Esplanade. Really delicious, got chicken wings, burger, nuggets, bull penis, ice cream and chocolate cake! Come fast cos confirm very fast clear one~ :)Food at Esplanade. Really delicious, got chicken wings, burger, nuggets, bull penis, ice cream and chocolate cake! Come fast cos confirm very fast clear one~ :)',\n        location: '1 Esplanade Dr, Singapore 038981',\n        lat: 1.2898355468246039,\n        long: 103.85527989652236,\n        distance: null,\n        end_time: '2023-03-12T22:00:00',\n        diet_res: ['halal'],\n        time_left: ''\n      }, {\n        description: 'Food at ur mom\\'s house',\n        location: '17 Petir Rd, Singapore 678278',\n        lat: 1.3784975491700686,\n        long: 103.76300728853624,\n        distance: null,\n        end_time: '2023-03-12T22:30:00',\n        diet_res: ['vegetarian'],\n        time_left: ''\n      }],\n      my_buffets: [{\n        description: 'My Buffet 1',\n        location: '1 Joo Koon Cir, #13-01 FairPrice Hub, Singapore 629117',\n        lat: 1.3267935951952476,\n        long: 103.67878198117971,\n        end_time: '2023-03-12T11:15:00',\n        // yyyy-mm-ddThh:mm:ss <- T is only a seperator\n        diet_res: ['halal', 'vegetarian', 'nobeef'],\n        time_left: ''\n      }, {\n        description: 'My Buffet 2',\n        location: '1 Esplanade Dr, Singapore 038981',\n        lat: 1.2898355468246039,\n        long: 103.85527989652236,\n        end_time: '2023-03-12T22:00:00',\n        diet_res: ['halal'],\n        time_left: ''\n      }],\n      diet_icons: {\n        'halal': 'fa-solid fa-star-and-crescent',\n        'vegetarian': 'fa-solid fa-leaf',\n        'nobeef': 'fa-solid fa-cow'\n      },\n      curr_focused: 0,\n      user_lat: null,\n      user_long: null,\n      to_display: 'other'\n    };\n  },\n  methods: {\n    get_all_food() {\n      const response = fetch(get_all_food_URL).then(response => response.json()).then(data => {\n        console.log(response);\n        if (data.code === 404) {\n          console.log(\"error!\");\n        } else {\n          this.food = data.data.food;\n        }\n      }).catch(error => {\n        console.log(error);\n      });\n    },\n    update_buffet_time_left() {\n      let curr_time = new Date();\n      for (let e_buff of this.buffets) {\n        // UPDATES TIME_LEFT\n        let end_time = new Date(e_buff.end_time);\n        let hr_left = Math.floor(Math.max(end_time - curr_time, 0) / 1000 / 60 / 60);\n        let min_left = Math.floor(Math.max(end_time - curr_time, 0) / 1000 / 60 % 60);\n        let sec_left = Math.floor(Math.max(end_time - curr_time, 0) / 1000 % 60);\n        e_buff.time_left = `${hr_left}hr ${min_left}min ${sec_left}s`;\n      }\n      for (let e_buff of this.my_buffets) {\n        // UPDATES TIME_LEFT\n        let end_time = new Date(e_buff.end_time);\n        let hr_left = Math.floor(Math.max(end_time - curr_time, 0) / 1000 / 60 / 60);\n        let min_left = Math.floor(Math.max(end_time - curr_time, 0) / 1000 / 60 % 60);\n        let sec_left = Math.floor(Math.max(end_time - curr_time, 0) / 1000 % 60);\n        e_buff.time_left = `${hr_left}hr ${min_left}min ${sec_left}s`;\n      }\n      setTimeout(this.update_buffet_time_left, 1000);\n    },\n    update_buffet_distance() {\n      console.log(`=== [START] update_buffet_distance() ===`);\n      for (let e_buff of this.buffets) {\n        // UPDATES DISTANCE\n        let target_lat = e_buff.lat;\n        let target_long = e_buff.long;\n        let distance_km = this.get_distance_km(target_lat, target_long, this.user_lat, this.user_long);\n        console.log(\"User curr latlong\", this.user_lat, this.user_long);\n        if (distance_km >= 1) {\n          e_buff.distance = distance_km.toFixed(1).toString() + \"km\";\n        } else {\n          e_buff.distance = Math.round(distance_km * 1000).toString() + 'm';\n        }\n      }\n      console.log(`=== [END] update_buffet_distance() ===`);\n    },\n    current_expanded() {\n      console.log(`=== [START] expanded() ===`);\n      let accordian_elem = document.getElementById(\"food_accordian\");\n      if (accordian_elem == null) {\n        return -1;\n      }\n      let accordian_children = accordian_elem.children;\n      let e_idx = -1;\n      for (let e_child of accordian_children) {\n        e_idx += 1;\n        let is_expanded = e_child.querySelector(`[aria-expanded='true']`);\n        if (is_expanded) {\n          return e_idx;\n        }\n      }\n      return -1;\n    },\n    focus_on_buffet(idx, is_my_buff) {\n      console.log(`=== [START] focus_on_buffet(${idx}) ===`);\n      let prefix = '';\n      if (is_my_buff) {\n        prefix = 'mybuff-';\n      }\n      if (idx == -1) {\n        idx = 0;\n      }\n      let focus_elem = document.getElementById(`${prefix}flush-heading${idx}`);\n      setTimeout(() => {\n        focus_elem.scrollIntoView({\n          behavior: 'smooth'\n        });\n      }, \"300\");\n      console.log(`=== [END] focus_on_buffet(${idx}) ===`);\n      return;\n    },\n    update_user_latlong(position) {\n      console.log(`=== [START] update_user_latlong() ===`);\n      this.user_lat = position.coords.latitude;\n      this.user_long = position.coords.longitude;\n      this.update_buffet_distance();\n      console.log(`=== [END] update_user_latlong() ===`);\n    },\n    getLocation() {\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(this.update_user_latlong);\n      }\n    },\n    get_distance_km(lat1, lon1, lat2, lon2) {\n      var R = 6371; // Radius of the earth in km\n      var dLat = this.deg2rad(lat2 - lat1); // deg2rad below\n      var dLon = this.deg2rad(lon2 - lon1);\n      var a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.cos(this.deg2rad(lat1)) * Math.cos(this.deg2rad(lat2)) * Math.sin(dLon / 2) * Math.sin(dLon / 2);\n      var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n      var d = R * c; // Distance in km\n      return d;\n    },\n    deg2rad(deg) {\n      return deg * (Math.PI / 180);\n    }\n  },\n  computed: {},\n  async created() {\n    this.getLocation();\n    this.update_buffet_time_left();\n    this.get_all_food();\n  }\n};","map":{"version":3,"names":["get_all_food_URL","props","data","food","buffets","description","location","lat","long","distance","end_time","diet_res","time_left","my_buffets","diet_icons","curr_focused","user_lat","user_long","to_display","methods","get_all_food","response","fetch","then","json","console","log","code","catch","error","update_buffet_time_left","curr_time","Date","e_buff","hr_left","Math","floor","max","min_left","sec_left","setTimeout","update_buffet_distance","target_lat","target_long","distance_km","get_distance_km","toFixed","toString","round","current_expanded","accordian_elem","document","getElementById","accordian_children","children","e_idx","e_child","is_expanded","querySelector","focus_on_buffet","idx","is_my_buff","prefix","focus_elem","scrollIntoView","behavior","update_user_latlong","position","coords","latitude","longitude","getLocation","navigator","geolocation","getCurrentPosition","lat1","lon1","lat2","lon2","R","dLat","deg2rad","dLon","a","sin","cos","c","atan2","sqrt","d","deg","PI","computed","created"],"sources":["C:\\ESD\\project\\MakanBoleh\\my_app\\src\\components\\FoodList.vue"],"sourcesContent":["<template>\r\n    <div class=\"accordion accordion-flush text-extra-dark bg-extra-light bg-opacity-75\" id=\"food_accordian\">\r\n        <!-- HEADER W BUTTONS -->\r\n        <div class=\"accordion-item bg-dark text-light py-3 m-0 row\" v-if=\"my_buffets.length > 0\">\r\n            <div class=\"col-6 d-flex justify-content-center\">\r\n                <button class=\"btn\" :class=\"{'fw-bold btn-main-secondary-fixed': to_display == 'mine', 'btn-main-light-fixed': to_display != 'mine'}\" @click=\"to_display = 'mine' \">My Buffets</button>\r\n            </div>\r\n\r\n            <div class=\"col-6 d-flex justify-content-center\">\r\n                <button class=\"btn\" :class=\"{'fw-bold btn-main-secondary-fixed': to_display == 'other', 'btn-main-light-fixed': to_display != 'other'}\" @click=\"to_display = 'other' \">Other Buffets</button>\r\n            </div>\r\n        </div>\r\n\r\n        <!-- MY BUFFETS -->\r\n        <div v-if=\"to_display == 'mine' \">\r\n            <!-- V-FOR MY_BUFFETS STARTS HERE -->\r\n            <div class=\"accordion-item\" v-for=\"(e_buff, index) in my_buffets\" :key=\"index\" >\r\n                <h2 class=\"accordion-header\" :id=\"`mybuff-flush-heading${index}`\">\r\n    \r\n                <!-- HEADER GOES HERE v -->\r\n                <button class=\"accordion-button collapsed bg-light\" type=\"button\" data-bs-toggle=\"collapse\" :data-bs-target=\"`#mybuff-flush-collapse${index}`\" aria-expanded=\"false\" :aria-controls=\"`mybuff-flush-collapse${index}`\" @click=\"focus_on_buffet(index, true)\">\r\n                    <div class=\"row vw-100\">\r\n                        <!-- IMAGE -->\r\n                        <div class=\"col-6 col-md-7 col-lg-8\">\r\n                            <img :src=\"require(`../assets/images/buffet_imgs/buffet${index%3+1}.jpg`)\" class=\"img-fluid\">\r\n                        </div>\r\n\r\n                        <!-- DETAILS -->\r\n                        <div class=\"col-6 col-md-5 col-lg-4\">\r\n                            <div class=\"row\">\r\n                                <!-- DIET RESTRICTIONS -->\r\n                                <div class=\"col-12\">\r\n                                    <h6>\r\n                                        <i v-for=\"(e_diet, index) in e_buff.diet_res\" :key=\"index\">\r\n                                            <font-awesome-icon :icon=\"diet_icons[e_diet]\" />&nbsp;\r\n                                        </i>\r\n                                    </h6>\r\n                                </div>\r\n\r\n                                <!-- TIME LEFT -->\r\n                                <div class=\"col-12\">\r\n                                    <h6><font-awesome-icon icon=\"fa-solid fa-hourglass-half\" /> {{ e_buff.time_left }} </h6>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </button>\r\n    \r\n                </h2>\r\n                <div :id=\"`mybuff-flush-collapse${index}`\" class=\"accordion-collapse collapse\" :aria-labelledby=\"`flush-heading${index}`\" data-bs-parent=\"#food_accordian\">\r\n                \r\n                <!-- BODY GOES HERE v -->\r\n                <div class=\"accordion-body bg-light-gradient\">\r\n                    <div class=\"container-fluid\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-12\">\r\n                                <h6>\r\n                                    <font-awesome-icon icon=\"fa-solid fa-location-dot\" /> {{ e_buff.location }}\r\n                                </h6>\r\n\r\n                                <p>\r\n                                    {{ e_buff.description }}\r\n                                </p>\r\n                            </div>\r\n                            <div class=\"col-12 d-flex justify-content-center align-items-center\">\r\n                                <div>\r\n                                    <button class=\"btn btn-warning btn-expand\">\r\n                                        <font-awesome-icon icon=\"fa-solid fa-circle-stop\" />&nbsp;&nbsp;End Buffet\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                        \r\n                </div>\r\n                </div>\r\n            </div>        \r\n        </div>\r\n\r\n        <!-- OTHER BUFFETS -->\r\n        <div v-if=\"to_display == 'other' \">\r\n            <!-- V-FOR BUFFETS STARTS HERE -->\r\n            <div class=\"accordion-item\" v-for=\"(e_buff, index) in food\" :key=\"index\" >\r\n                <h2 class=\"accordion-header\" :id=\"`flush-heading${index}`\">\r\n    \r\n                <!-- HEADER GOES HERE v -->\r\n                <button class=\"accordion-button collapsed bg-light\" type=\"button\" data-bs-toggle=\"collapse\" :data-bs-target=\"`#flush-collapse${index}`\" aria-expanded=\"false\" :aria-controls=\"`flush-collapse${index}`\" @click=\"focus_on_buffet(index, false)\">\r\n                    <div class=\"row vw-100\">\r\n                        <!-- IMAGE -->\r\n                        <div class=\"col-6 col-md-7 col-lg-8\">\r\n                            <img :src=\"require(`../assets/images/buffet_imgs/buffet${index%3+1}.jpg`)\" class=\"img-fluid\">\r\n                        </div>\r\n\r\n                        <!-- DETAILS -->\r\n                        <div class=\"col-6 col-md-5 col-lg-4\">\r\n                            <div class=\"row\">\r\n                                <!-- DIET RESTRICTIONS -->\r\n                                <div class=\"col-12\">\r\n                                    <h6>\r\n                                        <i v-for=\"(e_diet, index) in e_buff.diet_res\" :key=\"index\">\r\n                                            <font-awesome-icon :icon=\"diet_icons[e_diet]\" />&nbsp;\r\n                                        </i>\r\n                                    </h6>\r\n                                </div>\r\n\r\n                                <!-- TIME LEFT -->\r\n                                <div class=\"col-12\">\r\n                                    <h6><font-awesome-icon icon=\"fa-solid fa-hourglass-half\" /> {{ e_buff.time_left }} </h6>\r\n                                </div>\r\n\r\n                                <!-- DISTANCE -->\r\n                                <div class=\"col-12\" v-if=\"user_lat\">\r\n                                    <h6><font-awesome-icon icon=\"fa-solid fa-person-walking\" /> {{ e_buff.distance }}</h6>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </button>\r\n    \r\n                </h2>\r\n                <div :id=\"`flush-collapse${index}`\" class=\"accordion-collapse collapse\" :aria-labelledby=\"`flush-heading${index}`\" data-bs-parent=\"#food_accordian\">\r\n                \r\n                <!-- BODY GOES HERE v -->\r\n                <div class=\"accordion-body bg-light-gradient\">\r\n                    <div class=\"container-fluid\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-12\">\r\n                                <h6>\r\n                                    <font-awesome-icon icon=\"fa-solid fa-location-dot\" /> {{ e_buff.location }}\r\n                                </h6>\r\n\r\n                                <p>\r\n                                    {{ e_buff.description }}\r\n                                </p>\r\n                            </div>\r\n                            <div class=\"col-12 d-flex justify-content-center align-items-center\">\r\n                                <div>\r\n                                    <button class=\"btn btn-main\">\r\n                                        <font-awesome-icon icon=\"fa-solid fa-circle-arrow-right\" />&nbsp;&nbsp;Route to Buffet\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                        \r\n                </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n\r\n<script>\r\n    const get_all_food_URL = \"http://localhost:1112/all\";\r\n\r\n    export default{\r\n        props: [],\r\n\r\n        data() {\r\n            return{\r\n                food: [],\r\n                buffets: [\r\n                    {\r\n                        description: 'Food at SOL',\r\n                        location: '1 Joo Koon Cir, #13-01 FairPrice Hub, Singapore 629117',\r\n                        lat: 1.3267935951952476,\r\n                        long: 103.67878198117971,\r\n                        distance: null,\r\n                        end_time: '2023-03-12T11:15:00',     // yyyy-mm-ddThh:mm:ss <- T is only a seperator\r\n                        diet_res: ['halal', 'vegetarian', 'nobeef'],\r\n                        time_left: '',\r\n                    },\r\n\r\n                    {\r\n                        description: 'Food at Esplanade. Really delicious, got chicken wings, burger, nuggets, bull penis, ice cream and chocolate cake! Come fast cos confirm very fast clear one~ :)Food at Esplanade. Really delicious, got chicken wings, burger, nuggets, bull penis, ice cream and chocolate cake! Come fast cos confirm very fast clear one~ :)Food at Esplanade. Really delicious, got chicken wings, burger, nuggets, bull penis, ice cream and chocolate cake! Come fast cos confirm very fast clear one~ :)',\r\n                        location: '1 Esplanade Dr, Singapore 038981',\r\n                        lat: 1.2898355468246039,\r\n                        long: 103.85527989652236,\r\n                        distance: null,\r\n                        end_time: '2023-03-12T22:00:00',\r\n                        diet_res: ['halal'],\r\n                        time_left: '',\r\n                    },\r\n\r\n                    {\r\n                        description: 'Food at ur mom\\'s house',\r\n                        location: '17 Petir Rd, Singapore 678278',\r\n                        lat: 1.3784975491700686,\r\n                        long: 103.76300728853624,\r\n                        distance: null,\r\n                        end_time: '2023-03-12T22:30:00',\r\n                        diet_res: ['vegetarian'],\r\n                        time_left: '',\r\n                    },\r\n                ],\r\n\r\n                my_buffets: [\r\n                    {\r\n                        description: 'My Buffet 1',\r\n                        location: '1 Joo Koon Cir, #13-01 FairPrice Hub, Singapore 629117',\r\n                        lat: 1.3267935951952476,\r\n                        long: 103.67878198117971,\r\n                        end_time: '2023-03-12T11:15:00',     // yyyy-mm-ddThh:mm:ss <- T is only a seperator\r\n                        diet_res: ['halal', 'vegetarian', 'nobeef'],\r\n                        time_left: '',\r\n                    },\r\n\r\n                    {\r\n                        description: 'My Buffet 2',\r\n                        location: '1 Esplanade Dr, Singapore 038981',\r\n                        lat: 1.2898355468246039,\r\n                        long: 103.85527989652236,\r\n                        end_time: '2023-03-12T22:00:00',\r\n                        diet_res: ['halal'],\r\n                        time_left: '',\r\n                    },\r\n                ],\r\n\r\n                diet_icons: {\r\n                    'halal': 'fa-solid fa-star-and-crescent',\r\n                    'vegetarian': 'fa-solid fa-leaf',\r\n                    'nobeef': 'fa-solid fa-cow'\r\n                },\r\n\r\n                curr_focused: 0,\r\n\r\n                user_lat: null,\r\n                user_long: null,\r\n\r\n                to_display: 'other',\r\n            }\r\n        },\r\n\r\n        methods: {\r\n            get_all_food() {\r\n                const response = fetch(get_all_food_URL)\r\n                    .then(response => response.json())\r\n                    .then(data => {\r\n                        console.log(response);\r\n                        if (data.code === 404) {\r\n                            console.log(\"error!\");\r\n                        } else {\r\n                            this.food = data.data.food\r\n                    }\r\n                })\r\n                    .catch(error => {\r\n                        console.log(error);\r\n                    })\r\n            },\r\n            update_buffet_time_left() {\r\n                let curr_time = new Date();\r\n\r\n                for (let e_buff of this.buffets) {\r\n                    // UPDATES TIME_LEFT\r\n                    let end_time = new Date(e_buff.end_time);\r\n    \r\n                    let hr_left = Math.floor( (Math.max(end_time-curr_time, 0)) / 1000 / 60 / 60 );\r\n                    let min_left = Math.floor( (Math.max(end_time-curr_time, 0)) / 1000 / 60 % 60 );\r\n                    let sec_left = Math.floor( (Math.max(end_time-curr_time, 0)) / 1000 % 60 );\r\n\r\n                    e_buff.time_left = `${hr_left}hr ${min_left}min ${sec_left}s`;\r\n                }\r\n\r\n                for (let e_buff of this.my_buffets) {\r\n                    // UPDATES TIME_LEFT\r\n                    let end_time = new Date(e_buff.end_time);\r\n    \r\n                    let hr_left = Math.floor( (Math.max(end_time-curr_time, 0)) / 1000 / 60 / 60 );\r\n                    let min_left = Math.floor( (Math.max(end_time-curr_time, 0)) / 1000 / 60 % 60 );\r\n                    let sec_left = Math.floor( (Math.max(end_time-curr_time, 0)) / 1000 % 60 );\r\n\r\n                    e_buff.time_left = `${hr_left}hr ${min_left}min ${sec_left}s`;\r\n                }\r\n\r\n                setTimeout(this.update_buffet_time_left, 1000)\r\n            },\r\n\r\n            update_buffet_distance() {\r\n                console.log(`=== [START] update_buffet_distance() ===`)\r\n                \r\n                for (let e_buff of this.buffets) {\r\n                    // UPDATES DISTANCE\r\n                    let target_lat = e_buff.lat\r\n                    let target_long = e_buff.long\r\n                    let distance_km = this.get_distance_km(target_lat, target_long, this.user_lat, this.user_long)\r\n\r\n                    console.log(\"User curr latlong\", this.user_lat, this.user_long)\r\n\r\n                    if (distance_km >= 1) {\r\n                        e_buff.distance = distance_km.toFixed(1).toString() + \"km\"\r\n                    } else {\r\n                        e_buff.distance = Math.round(distance_km * 1000).toString() + 'm'\r\n                    }\r\n                }\r\n\r\n                console.log(`=== [END] update_buffet_distance() ===`)\r\n            },\r\n\r\n            current_expanded() {\r\n                console.log(`=== [START] expanded() ===`)\r\n                \r\n                let accordian_elem = document.getElementById(\"food_accordian\")\r\n\r\n                if (accordian_elem == null) {return -1}\r\n\r\n                let accordian_children = accordian_elem.children\r\n\r\n                let e_idx = -1\r\n\r\n                for (let e_child of accordian_children) {\r\n                    e_idx += 1\r\n\r\n                    let is_expanded = e_child.querySelector(`[aria-expanded='true']`)\r\n                    \r\n                    if (is_expanded) {\r\n                        return e_idx\r\n                    }\r\n                }\r\n\r\n                return -1\r\n            },\r\n\r\n            focus_on_buffet(idx, is_my_buff) {\r\n                console.log(`=== [START] focus_on_buffet(${idx}) ===`)\r\n                let prefix = ''\r\n\r\n                if (is_my_buff) {\r\n                    prefix = 'mybuff-'\r\n                }\r\n                \r\n                if (idx == -1) { idx = 0 }\r\n\r\n                let focus_elem = document.getElementById(`${prefix}flush-heading${idx}`)\r\n\r\n                setTimeout(() => {\r\n                    focus_elem.scrollIntoView({ behavior: 'smooth'})\r\n                }, \"300\")\r\n\r\n                console.log(`=== [END] focus_on_buffet(${idx}) ===`)\r\n                return\r\n            },\r\n\r\n            update_user_latlong(position) {\r\n                console.log(`=== [START] update_user_latlong() ===`)\r\n                \r\n                this.user_lat = position.coords.latitude\r\n                this.user_long =  position.coords.longitude\r\n\r\n                this.update_buffet_distance()\r\n\r\n                console.log(`=== [END] update_user_latlong() ===`)\r\n            },\r\n\r\n            getLocation() {\r\n                if (navigator.geolocation) {\r\n                    navigator.geolocation.getCurrentPosition(this.update_user_latlong);\r\n                }\r\n            },\r\n\r\n            get_distance_km(lat1, lon1, lat2, lon2) {\r\n                var R = 6371; // Radius of the earth in km\r\n                var dLat = this.deg2rad(lat2-lat1);  // deg2rad below\r\n                var dLon = this.deg2rad(lon2-lon1); \r\n                var a = \r\n                    Math.sin(dLat/2) * Math.sin(dLat/2) +\r\n                    Math.cos(this.deg2rad(lat1)) * Math.cos(this.deg2rad(lat2)) * \r\n                    Math.sin(dLon/2) * Math.sin(dLon/2)\r\n                    ; \r\n                var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a)); \r\n                var d = R * c; // Distance in km\r\n                return d;\r\n            },\r\n\r\n            deg2rad(deg) {\r\n                return deg * (Math.PI/180)\r\n            },\r\n        },\r\n\r\n        computed: {\r\n        },\r\n\r\n        async created() {\r\n            this.getLocation();\r\n            this.update_buffet_time_left();\r\n            this.get_all_food();\r\n        }\r\n    }\r\n</script>\r\n\r\n\r\n<style scoped>\r\n    /* Up to LG */\r\n    @media (max-width: 769px) {\r\n        #food_accordian{\r\n            position: fixed;\r\n            bottom: 0;\r\n            right: 0;\r\n            left: 0;\r\n            overflow-y: scroll;\r\n            max-height: 40vh;\r\n            transition: all .8s ease-in-out;\r\n            border-radius: 12px 12px 0px 0px;\r\n        }\r\n\r\n        #food_accordian:has(.accordion-button[aria-expanded='true']) {\r\n            max-height: 60vh;\r\n        }\r\n    }\r\n\r\n    /* Past LG */\r\n    @media (min-width: 769px) {\r\n        #food_accordian{\r\n            position: absolute;\r\n            bottom: 0;\r\n            left: 0;\r\n            overflow-y: scroll;\r\n            height: 100%;\r\n            width: 50vw;\r\n        }\r\n    }\r\n    img{\r\n        aspect-ratio: 120/ 70;\r\n        object-fit: cover;\r\n        border-radius: 10px;\r\n    }\r\n\r\n    .accordion-button[aria-expanded='true'] {\r\n        background-color: #FFC23F !important;\r\n        color: #1e2e1e;\r\n    }\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}