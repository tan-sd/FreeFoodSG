{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createBlock as _createBlock, createVNode as _createVNode, mergeProps as _mergeProps, withCtx as _withCtx, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-3074bd5c\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  id: \"map\"\n};\nconst _hoisted_2 = {\n  class: \"autocomplete d-flex\"\n};\nconst _hoisted_3 = {\n  class: \"form-floating mt-3 ms-3\"\n};\nconst _hoisted_4 = {\n  for: \"googleAutocomplete\",\n  class: \"text-dark\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_GMapMarker = _resolveComponent(\"GMapMarker\");\n  const _component_GMapCircle = _resolveComponent(\"GMapCircle\");\n  const _component_GMapMap = _resolveComponent(\"GMapMap\");\n  const _component_GMapAutocomplete = _resolveComponent(\"GMapAutocomplete\");\n  const _component_font_awesome_icon = _resolveComponent(\"font-awesome-icon\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", _hoisted_1, [_createVNode(_component_GMapMap, _mergeProps({\n    ref: \"map\"\n  }, _ctx.$attrs, {\n    center: $data.center,\n    zoom: $data.zoomValue,\n    \"map-type-id\": \"terrain\",\n    options: $data.GMapOptions,\n    class: \"map\"\n  }), {\n    default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.markers, (m, index) => {\n      return _openBlock(), _createBlock(_component_GMapMarker, {\n        class: \"current-location-marker\",\n        key: index,\n        position: m.position\n      }, null, 8 /* PROPS */, [\"position\"]);\n    }), 128 /* KEYED_FRAGMENT */)), _createVNode(_component_GMapCircle, {\n      radius: 500,\n      center: $data.currentLocation,\n      options: $data.circleOptions\n    }, null, 8 /* PROPS */, [\"center\", \"options\"])]),\n    _: 1 /* STABLE */\n  }, 16 /* FULL_PROPS */, [\"center\", \"zoom\", \"options\"])]), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createVNode(_component_GMapAutocomplete, {\n    ref: \"autocomplete\",\n    type: \"text\",\n    onPlace_changed: $options.setPlace,\n    options: $data.autoCompleteOptions,\n    value: this.search,\n    placeholder: \" \",\n    class: \"form-control bg-autocomplete\",\n    id: \"googleAutocomplete\",\n    onInput: $options.onInput\n  }, null, 8 /* PROPS */, [\"onPlace_changed\", \"options\", \"value\", \"onInput\"]), _createElementVNode(\"label\", _hoisted_4, [_createVNode(_component_font_awesome_icon, {\n    icon: \"fa-solid fa-pizza-slice\"\n  }), _createTextVNode(\"  Search Here \")])]), $data.showClearButton ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 0,\n    id: \"clear-button\",\n    class: \"text-dark\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.clear_search && $options.clear_search(...args))\n  }, [_createVNode(_component_font_awesome_icon, {\n    icon: \"fa-solid fa-xmark\"\n  })])) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = $event => $options.re_center()),\n    class: \"text-dark bg-recenter ms-1 mt-4 rounded btn btn-light\"\n  }, [_createVNode(_component_font_awesome_icon, {\n    icon: \"fa-solid fa-crosshairs\"\n  })])])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["id","class","for","_createElementVNode","_hoisted_1","_createVNode","_component_GMapMap","_mergeProps","ref","_ctx","$attrs","center","$data","zoom","zoomValue","options","GMapOptions","_createElementBlock","_Fragment","_renderList","markers","m","index","_createBlock","_component_GMapMarker","key","position","_component_GMapCircle","radius","currentLocation","circleOptions","_hoisted_2","_hoisted_3","_component_GMapAutocomplete","type","onPlace_changed","$options","setPlace","autoCompleteOptions","value","search","placeholder","onInput","_hoisted_4","_component_font_awesome_icon","icon","showClearButton","onClick","_cache","args","clear_search","$event","re_center"],"sources":["C:\\ESD\\project\\MakanBoleh\\my_app\\src\\components\\Map.vue"],"sourcesContent":["<template>\r\n    <div id=\"map\">\r\n        <GMapMap\r\n            ref=\"map\"\r\n            v-bind=\"$attrs\"\r\n            :center=\"center\"\r\n            :zoom=\"zoomValue\"\r\n            map-type-id=\"terrain\"\r\n            :options=\"GMapOptions\"\r\n            class=\"map\"\r\n        >\r\n        <GMapMarker\r\n            class=\"current-location-marker\"\r\n            :key=\"index\"\r\n            v-for=\"(m, index) in markers\"\r\n            :position=\"m.position\"\r\n        />\r\n        <GMapCircle\r\n            :radius=\"500\"\r\n            :center=\"currentLocation\"\r\n            :options=\"circleOptions\"\r\n        />\r\n        </GMapMap>\r\n    </div>\r\n\r\n    <div class=\"autocomplete d-flex\">\r\n            <div class=\"form-floating mt-3 ms-3\">\r\n                <GMapAutocomplete\r\n                    ref=\"autocomplete\"\r\n                    type=\"text\"\r\n                    @place_changed=\"setPlace\"\r\n                    :options=\"autoCompleteOptions\"\r\n                    :value=\"this.search\"\r\n                    placeholder=\" \"\r\n                    class=\"form-control bg-autocomplete\"\r\n                    id=\"googleAutocomplete\"\r\n                    @input=\"onInput\"\r\n                    >\r\n                </GMapAutocomplete>\r\n\r\n                <label for=\"googleAutocomplete\" class=\"text-dark\">\r\n                    <font-awesome-icon icon=\"fa-solid fa-pizza-slice\" />&nbsp;&nbsp;Search Here\r\n                </label>\r\n            </div>\r\n\r\n            <button\r\n                id=\"clear-button\"\r\n                class=\"text-dark\"\r\n                @click=\"clear_search\"\r\n                v-if=\"showClearButton\">\r\n                <font-awesome-icon icon=\"fa-solid fa-xmark\" />\r\n            </button>\r\n            <button @click=\"re_center()\" class=\"text-dark bg-recenter ms-1 mt-4 rounded btn btn-light\">\r\n                <font-awesome-icon icon=\"fa-solid fa-crosshairs\" />\r\n            </button>\r\n        </div>\r\n  </template>\r\n\r\n  <script>\r\n    export default {\r\n        inheritAttrs: true,\r\n        methods: {\r\n            onInput() {\r\n                this.showClearButton = this.$refs.autocomplete.$refs.input.value.length > 0;\r\n            },\r\n            re_center() {\r\n                const map = this.$refs.map\r\n                map.panTo(this.currentLocation)\r\n                this.zoomValue = 15\r\n            },\r\n            clear_search() {\r\n                this.$refs.autocomplete.$refs.input.value = '';\r\n                this.showClearButton = false\r\n            },\r\n            setPlace(place) {\r\n                // this.actLocation = place.name;\r\n                this.center = {\r\n                    lat: place.geometry.location.lat(),\r\n                    lng: place.geometry.location.lng(),\r\n                }\r\n            },\r\n            async get_location() {\r\n                return new Promise((resolve, reject) => {\r\n                    navigator.geolocation.getCurrentPosition(resolve, reject);\r\n                });\r\n            }\r\n        },\r\n        mounted() {\r\n            this.get_location().then(position => {\r\n                this.markers[0].position.lat = position.coords.latitude;\r\n                this.markers[0].position.lng = position.coords.longitude;\r\n                this.center.lat = position.coords.latitude;\r\n                this.center.lng = position.coords.longitude;\r\n                this.currentLocation.lat = position.coords.latitude;\r\n                this.currentLocation.lng = position.coords.longitude;\r\n            });\r\n        },\r\n        data() {\r\n            return {\r\n                showClearButton: false,\r\n                search: '',\r\n                actLocation: \"\",\r\n                currentLocation: {\r\n                    lat: 1.300270,\r\n                    lng: 103.851959,\r\n                },\r\n                currentLat: \"\",\r\n                currentLng: \"\",\r\n                zoomValue: 14,\r\n                center: {lat: 1.300270, lng: 103.851959},\r\n                markers:\r\n                [\r\n                    {\r\n                        position: {\r\n                            lat: null,\r\n                            lng: null,\r\n                        },\r\n                    }\r\n                ],\r\n                autoCompleteOptions: {\r\n                    componentRestrictions: {\r\n                        country: [\"sg\"],\r\n                    }\r\n                },\r\n                GMapOptions: {\r\n                    zoomControl: false,\r\n                    mapTypeControl: false,\r\n                    scaleControl: false,\r\n                    streetViewControl: false,\r\n                    rotateControl: false,\r\n                    fullscreenControl: false,\r\n                    styles: [\r\n                        {\r\n                            \"elementType\": \"geometry\",\r\n                            \"stylers\": [\r\n                            {\r\n                                \"color\": \"#ebe3cd\"\r\n                            }\r\n                            ]\r\n                        },\r\n                        {\r\n                            \"elementType\": \"labels.text.fill\",\r\n                            \"stylers\": [\r\n                            {\r\n                                \"color\": \"#523735\"\r\n                            }\r\n                            ]\r\n                        },\r\n                        {\r\n                            \"elementType\": \"labels.text.stroke\",\r\n                            \"stylers\": [\r\n                            {\r\n                                \"color\": \"#f5f1e6\"\r\n                            }\r\n                            ]\r\n                        },\r\n                        {\r\n                            \"featureType\": \"administrative\",\r\n                            \"elementType\": \"geometry.stroke\",\r\n                            \"stylers\": [\r\n                            {\r\n                                \"color\": \"#c9b2a6\"\r\n                            }\r\n                            ]\r\n                        },\r\n                        {\r\n                            \"featureType\": \"administrative.land_parcel\",\r\n                            \"elementType\": \"geometry.stroke\",\r\n                            \"stylers\": [\r\n                            {\r\n                                \"color\": \"#dcd2be\"\r\n                            }\r\n                            ]\r\n                        },\r\n                        {\r\n                            \"featureType\": \"administrative.land_parcel\",\r\n                            \"elementType\": \"labels.text.fill\",\r\n                            \"stylers\": [\r\n                            {\r\n                                \"color\": \"#ae9e90\"\r\n                            }\r\n                            ]\r\n                        },\r\n                        {\r\n                            \"featureType\": \"landscape.natural\",\r\n                            \"elementType\": \"geometry\",\r\n                            \"stylers\": [\r\n                            {\r\n                                \"color\": \"#dfd2ae\"\r\n                            }\r\n                            ]\r\n                        },\r\n                        {\r\n                            \"featureType\": \"poi\",\r\n                            \"elementType\": \"geometry\",\r\n                            \"stylers\": [\r\n                            {\r\n                                \"color\": \"#dfd2ae\"\r\n                            }\r\n                            ]\r\n                        },\r\n                        {\r\n                            \"featureType\": \"poi\",\r\n                            \"elementType\": \"labels.text.fill\",\r\n                            \"stylers\": [\r\n                            {\r\n                                \"color\": \"#93817c\"\r\n                            }\r\n                            ]\r\n                        },\r\n                        {\r\n                            \"featureType\": \"poi.business\",\r\n                            \"stylers\": [\r\n                            {\r\n                                \"visibility\": \"off\"\r\n                            }\r\n                            ]\r\n                        },\r\n                        {\r\n                            \"featureType\": \"poi.park\",\r\n                            \"elementType\": \"geometry.fill\",\r\n                            \"stylers\": [\r\n                            {\r\n                                \"color\": \"#a5b076\"\r\n                            }\r\n                            ]\r\n                        },\r\n                        {\r\n                            \"featureType\": \"poi.park\",\r\n                            \"elementType\": \"labels.text\",\r\n                            \"stylers\": [\r\n                            {\r\n                                \"visibility\": \"off\"\r\n                            }\r\n                            ]\r\n                        },\r\n                        {\r\n                            \"featureType\": \"poi.park\",\r\n                            \"elementType\": \"labels.text.fill\",\r\n                            \"stylers\": [\r\n                            {\r\n                                \"color\": \"#447530\"\r\n                            }\r\n                            ]\r\n                        },\r\n                        {\r\n                            \"featureType\": \"road\",\r\n                            \"elementType\": \"geometry\",\r\n                            \"stylers\": [\r\n                            {\r\n                                \"color\": \"#f5f1e6\"\r\n                            }\r\n                            ]\r\n                        },\r\n                        {\r\n                            \"featureType\": \"road.arterial\",\r\n                            \"elementType\": \"geometry\",\r\n                            \"stylers\": [\r\n                            {\r\n                                \"color\": \"#fdfcf8\"\r\n                            }\r\n                            ]\r\n                        },\r\n                        {\r\n                            \"featureType\": \"road.arterial\",\r\n                            \"elementType\": \"labels\",\r\n                            \"stylers\": [\r\n                            {\r\n                                \"visibility\": \"off\"\r\n                            }\r\n                            ]\r\n                        },\r\n                        {\r\n                            \"featureType\": \"road.highway\",\r\n                            \"elementType\": \"geometry\",\r\n                            \"stylers\": [\r\n                            {\r\n                                \"color\": \"#f8c967\"\r\n                            }\r\n                            ]\r\n                        },\r\n                        {\r\n                            \"featureType\": \"road.highway\",\r\n                            \"elementType\": \"geometry.stroke\",\r\n                            \"stylers\": [\r\n                            {\r\n                                \"color\": \"#e9bc62\"\r\n                            }\r\n                            ]\r\n                        },\r\n                        {\r\n                            \"featureType\": \"road.highway\",\r\n                            \"elementType\": \"labels\",\r\n                            \"stylers\": [\r\n                            {\r\n                                \"visibility\": \"off\"\r\n                            }\r\n                            ]\r\n                        },\r\n                        {\r\n                            \"featureType\": \"road.highway.controlled_access\",\r\n                            \"elementType\": \"geometry\",\r\n                            \"stylers\": [\r\n                            {\r\n                                \"color\": \"#e98d58\"\r\n                            }\r\n                            ]\r\n                        },\r\n                        {\r\n                            \"featureType\": \"road.highway.controlled_access\",\r\n                            \"elementType\": \"geometry.stroke\",\r\n                            \"stylers\": [\r\n                            {\r\n                                \"color\": \"#db8555\"\r\n                            }\r\n                            ]\r\n                        },\r\n                        {\r\n                            \"featureType\": \"road.local\",\r\n                            \"stylers\": [\r\n                            {\r\n                                \"visibility\": \"off\"\r\n                            }\r\n                            ]\r\n                        },\r\n                        {\r\n                            \"featureType\": \"road.local\",\r\n                            \"elementType\": \"labels.text.fill\",\r\n                            \"stylers\": [\r\n                            {\r\n                                \"color\": \"#806b63\"\r\n                            }\r\n                            ]\r\n                        },\r\n                        {\r\n                            \"featureType\": \"transit.line\",\r\n                            \"elementType\": \"geometry\",\r\n                            \"stylers\": [\r\n                            {\r\n                                \"color\": \"#dfd2ae\"\r\n                            }\r\n                            ]\r\n                        },\r\n                        {\r\n                            \"featureType\": \"transit.line\",\r\n                            \"elementType\": \"labels.text.fill\",\r\n                            \"stylers\": [\r\n                            {\r\n                                \"color\": \"#8f7d77\"\r\n                            }\r\n                            ]\r\n                        },\r\n                        {\r\n                            \"featureType\": \"transit.line\",\r\n                            \"elementType\": \"labels.text.stroke\",\r\n                            \"stylers\": [\r\n                            {\r\n                                \"color\": \"#ebe3cd\"\r\n                            }\r\n                            ]\r\n                        },\r\n                        {\r\n                            \"featureType\": \"transit.station\",\r\n                            \"elementType\": \"geometry\",\r\n                            \"stylers\": [\r\n                            {\r\n                                \"color\": \"#dfd2ae\"\r\n                            }\r\n                            ]\r\n                        },\r\n                        {\r\n                            \"featureType\": \"water\",\r\n                            \"elementType\": \"geometry.fill\",\r\n                            \"stylers\": [\r\n                            {\r\n                                \"color\": \"#b9d3c2\"\r\n                            }\r\n                            ]\r\n                        },\r\n                        {\r\n                            \"featureType\": \"water\",\r\n                            \"elementType\": \"labels.text.fill\",\r\n                            \"stylers\": [\r\n                            {\r\n                                \"color\": \"#92998d\"\r\n                            }\r\n                            ]\r\n                        }\r\n                    ]\r\n                },\r\n                circleOptions: {\r\n                    strokeWeight: 0,\r\n                    fillColor: \"#4285F4\",\r\n                    fillOpacity: 0.2,\r\n                    clickable: false,\r\n                    zIndex: -1,\r\n                },\r\n            }\r\n        },\r\n    }\r\n    </script>\r\n\r\n\r\n<style scoped>\r\n#map{\r\n    height: 100%;\r\n    overflow: hidden;\r\n}\r\n\r\n.bg-autocomplete{\r\n    background-color: white;\r\n    opacity: 90%;\r\n    width: 86vw;\r\n}\r\n\r\n.bg-recenter {\r\n    background-color: white;\r\n    opacity: 90%;\r\n    width: 40px;\r\n    height: 40px;\r\n}\r\n\r\n#clear-button {\r\n    position: absolute;\r\n    outline: none;\r\n    border: none;\r\n    background-color: transparent;\r\n    top: 32px;\r\n}\r\n\r\n/* Up to LG */\r\n@media (max-width: 769px) {\r\n    .autocomplete{\r\n        position: absolute;\r\n        top: 0;\r\n    }\r\n\r\n    .map{\r\n        height: calc(100% + 24px);\r\n        width: 100vw;\r\n        position: absolute;\r\n    }\r\n\r\n    #clear-button {\r\n        right: 60px;\r\n    }\r\n}\r\n\r\n/* Past LG */\r\n@media (min-width: 769px) {\r\n    .autocomplete{\r\n        position: absolute;\r\n        top: 0;\r\n        margin-left: 40%;\r\n    }\r\n\r\n    .bg-autocomplete{\r\n        background-color: white;\r\n        opacity: 90%;\r\n        width: 53vw;\r\n    }\r\n\r\n    .map{\r\n        height: 100%;\r\n        width: 140vw;\r\n    }\r\n\r\n    #clear-button {\r\n        right: 60px;\r\n    }\r\n}\r\n\r\n@keyframes pulse {\r\n  0% {\r\n    transform: scale(0.1);\r\n    opacity: 0.7;\r\n  }\r\n  70% {\r\n    transform: scale(1);\r\n    opacity: 0;\r\n  }\r\n  100% {\r\n    transform: scale(1);\r\n    opacity: 0;\r\n  }\r\n}\r\n\r\n</style>"],"mappings":";;;EACSA,EAAE,EAAC;AAAK;;EAwBRC,KAAK,EAAC;AAAqB;;EACnBA,KAAK,EAAC;AAAyB;;EAczBC,GAAG,EAAC,oBAAoB;EAACD,KAAK,EAAC;;;;;;;;6DAvClDE,mBAAA,CAsBM,OAtBNC,UAsBM,GArBFC,YAAA,CAoBUC,kBAAA,EApBVC,WAAA,CAoBU;IAnBNC,GAAG,EAAC;EAAK,GACDC,IAAA,CAAAC,MAAM;IACbC,MAAM,EAAEC,KAAA,CAAAD,MAAM;IACdE,IAAI,EAAED,KAAA,CAAAE,SAAS;IAChB,aAAW,EAAC,SAAS;IACpBC,OAAO,EAAEH,KAAA,CAAAI,WAAW;IACrBf,KAAK,EAAC;;sBAKN,MAA6B,E,kBAHjCgB,mBAAA,CAKEC,SAAA,QAAAC,WAAA,CAFuBP,KAAA,CAAAQ,OAAO,GAApBC,CAAC,EAAEC,KAAK;2BAHpBC,YAAA,CAKEC,qBAAA;QAJEvB,KAAK,EAAC,yBAAyB;QAC9BwB,GAAG,EAAEH,KAAK;QAEVI,QAAQ,EAAEL,CAAC,CAACK;;oCAEjBrB,YAAA,CAIEsB,qBAAA;MAHGC,MAAM,EAAE,GAAG;MACXjB,MAAM,EAAEC,KAAA,CAAAiB,eAAe;MACvBd,OAAO,EAAEH,KAAA,CAAAkB;;;4DAKlB3B,mBAAA,CA8BU,OA9BV4B,UA8BU,GA7BF5B,mBAAA,CAiBM,OAjBN6B,UAiBM,GAhBF3B,YAAA,CAWmB4B,2BAAA;IAVfzB,GAAG,EAAC,cAAc;IAClB0B,IAAI,EAAC,MAAM;IACVC,eAAa,EAAEC,QAAA,CAAAC,QAAQ;IACvBtB,OAAO,EAAEH,KAAA,CAAA0B,mBAAmB;IAC5BC,KAAK,OAAOC,MAAM;IACnBC,WAAW,EAAC,GAAG;IACfxC,KAAK,EAAC,8BAA8B;IACpCD,EAAE,EAAC,oBAAoB;IACtB0C,OAAK,EAAEN,QAAA,CAAAM;+EAIZvC,mBAAA,CAEQ,SAFRwC,UAEQ,GADJtC,YAAA,CAAoDuC,4BAAA;IAAjCC,IAAI,EAAC;EAAyB,I,iBAAG,gBACxD,E,KAOMjC,KAAA,CAAAkC,eAAe,I,cAJzB7B,mBAAA,CAMS;;IALLjB,EAAE,EAAC,cAAc;IACjBC,KAAK,EAAC,WAAW;IAChB8C,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEb,QAAA,CAAAc,YAAA,IAAAd,QAAA,CAAAc,YAAA,IAAAD,IAAA,CAAY;MAEpB5C,YAAA,CAA8CuC,4BAAA;IAA3BC,IAAI,EAAC;EAAmB,G,wCAE/C1C,mBAAA,CAES;IAFA4C,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAG,MAAA,IAAEf,QAAA,CAAAgB,SAAS;IAAInD,KAAK,EAAC;MAC/BI,YAAA,CAAmDuC,4BAAA;IAAhCC,IAAI,EAAC;EAAwB,G"},"metadata":{},"sourceType":"module","externalDependencies":[]}